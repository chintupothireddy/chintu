#include<stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h> 
int main()
{
    // Parent process finishes execution while the
    // child process is running. The child process
    // becomes orphan.      
    int pid = fork();
 
    if (pid > 0)
        printf("in parent process 1\n");
 
    else if (pid == 0)
    {
        sleep(0);
        printf("orphan process1\n");
    }
    // Parent process finishes execution while the
    // child process is running. The child process
    // becomes orphan1.      
    int pid1 = fork();
 
    if (pid1 > 0)
        printf("in parent process 2\n");
 
    else if (pid1 == 0)
    {
        sleep(0);
        printf("orphan process 2\n");
    }
    pid_t child_pid = fork();
    
     
    if (child_pid > 0)
        sleep(5);
 
    // Child becomes Zombie as parent is sleeping
    // when child process exits.
    else       
        exit(0); 
	pid_t child_pid1 = fork();
 
     
    if (child_pid1 > 0)
        sleep(5);
 
    // Child becomes Zombie as parent is sleeping
    // when child process exits.
    else       
        exit(0); 
    
    return 0;
}
